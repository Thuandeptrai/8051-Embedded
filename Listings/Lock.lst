C51 COMPILER V9.60.0.0   LOCK                                                              04/26/2022 01:23:32 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LOCK
OBJECT MODULE PLACED IN .\Objects\Lock.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Lock.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Lock
                    -.lst) TABS(2) OBJECT(.\Objects\Lock.obj)

line level    source

   1          #include<reg51.h>
   2          
   3          #include<string.h>
   4          
   5          sbit RS = P3 ^ 0;
   6          sbit EN = P3 ^ 1;
   7          sbit IN1 = P3 ^ 2;
   8          sbit IN2 = P3 ^ 3;
   9          sbit RW = P0 ^ 0;
  10          void delay(int a) {
  11   1        int i, j;
  12   1        for (i = 0; i < a; i++)
  13   1          for (j = 0; j < 255; j++);
  14   1      }
  15          void cmd(char cm) {
  16   1        P2 = cm;
  17   1        RS = 0;
  18   1        EN = 1;
  19   1        delay(1);
  20   1        EN = 0;
  21   1      }
  22          
  23          void dat(char dt) {
  24   1        P2 = dt;
  25   1        RS = 1;
  26   1        EN = 1;
  27   1        delay(1);
  28   1        EN = 0;
  29   1      }
  30          
  31          
  32          void display(char * lcd) {
  33   1        while ( * lcd != '\0') {
  34   2          dat( * lcd);
  35   2          lcd++;
  36   2        }
  37   1      }
  38          void lcdint() {
  39   1        cmd(0x01);
  40   1        cmd(0x38);
  41   1        cmd(0x0E);
  42   1        cmd(0x80);
  43   1      
  44   1      }
  45          char pass[5] = "1234";
  46          int i = 0;
  47          int changepassword(int i) {
  48   1      
  49   1        char * ptr;
  50   1        IN1 = 0;
  51   1        IN2 = 0;
  52   1        ptr = pass;
  53   1        lcdint();
  54   1        display("N-Password-");
C51 COMPILER V9.60.0.0   LOCK                                                              04/26/2022 01:23:32 PAGE 2   

  55   1      
  56   1        pass[4] = '\0';
  57   1      
  58   1        while (1) {
  59   2          while (i < 4) {
  60   3            P1 = 0xFE;
  61   3            if (P1 == 0xEE) {
  62   4              *(ptr + i) = '7';
  63   4              dat('7');
  64   4              delay(200);
  65   4              cmd(0x06);
  66   4      
  67   4              i++;
  68   4      
  69   4            } else if (P1 == 0xDE) {
  70   4              *(ptr + i) = '8';
  71   4              dat('8');
  72   4              delay(200);
  73   4              cmd(0x06);
  74   4      
  75   4              i++;
  76   4      
  77   4            } else if (P1 == 0xBE) {
  78   4              *(ptr + i) = '9';
  79   4              dat('9');
  80   4              delay(200);
  81   4              cmd(0x06);
  82   4      
  83   4              i++;
  84   4            } else if (P1 == 0x7E) {
  85   4              *(ptr + i) = '/';
  86   4              dat('/');
  87   4              delay(200);
  88   4              cmd(0x06);
  89   4      
  90   4              i++;
  91   4            }
  92   3      
  93   3            P1 = 0xFD;
  94   3            if (P1 == 0xED) {
  95   4              *(ptr + i) = '4';
  96   4              dat('4');
  97   4              delay(200);
  98   4              cmd(0x06);
  99   4      
 100   4              i++;
 101   4            } else if (P1 == 0xDD) {
 102   4              *(ptr + i) = '5';
 103   4              dat('5');
 104   4              delay(200);
 105   4              cmd(0x06);
 106   4      
 107   4              i++;
 108   4            } else if (P1 == 0xBD) {
 109   4              *(ptr + i) = '6';
 110   4              dat('6');
 111   4              delay(200);
 112   4              cmd(0x06);
 113   4      
 114   4              i++;
 115   4            } else if (P1 == 0x7D) {
 116   4              *(ptr + i) = '*';
C51 COMPILER V9.60.0.0   LOCK                                                              04/26/2022 01:23:32 PAGE 3   

 117   4              dat('*');
 118   4              delay(200);
 119   4              cmd(0x06);
 120   4      
 121   4              i++;
 122   4            }
 123   3      
 124   3            P1 = 0xFB;
 125   3            if (P1 == 0xEB) {
 126   4              *(ptr + i) = '1';
 127   4              dat('1');
 128   4              delay(200);
 129   4              cmd(0x06);
 130   4      
 131   4              i++;
 132   4            } else if (P1 == 0xDB) {
 133   4              *(ptr + i) = '2';
 134   4              dat('2');
 135   4              delay(200);
 136   4              cmd(0x06);
 137   4      
 138   4              i++;
 139   4            } else if (P1 == 0xBB) {
 140   4              *(ptr + i) = '3';
 141   4              dat('3');
 142   4              delay(200);
 143   4              cmd(0x06);
 144   4      
 145   4              i++;
 146   4            } else if (P1 == 0x7B) {
 147   4              *(ptr + i) = '-';
 148   4              dat('-');
 149   4              delay(200);
 150   4              cmd(0x06);
 151   4      
 152   4              i++;
 153   4            }
 154   3      
 155   3            P1 = 0xF7;
 156   3            if (P1 == 0xE7) {
 157   4              *(ptr + i) = 'C';
 158   4              dat('C');
 159   4              delay(200);
 160   4              cmd(0x06);
 161   4      
 162   4              i++;
 163   4      
 164   4            } else if (P1 == 0xD7) {
 165   4              *(ptr + i) = '0';
 166   4              dat('0');
 167   4              delay(200);
 168   4              cmd(0x06);
 169   4      
 170   4              i++;
 171   4            } else if (P1 == 0xB7) {
 172   4              *(ptr + i) = '=';
 173   4              dat('=');
 174   4              delay(200);
 175   4              cmd(0x06);
 176   4      
 177   4              i++;
 178   4            } else if (P1 == 0x77) {
C51 COMPILER V9.60.0.0   LOCK                                                              04/26/2022 01:23:32 PAGE 4   

 179   4              *(ptr + i) = '+';
 180   4              dat('+');
 181   4              delay(200);
 182   4              cmd(0x06);
 183   4      
 184   4              i++;
 185   4            }
 186   3          }
 187   2          while (i == 4) {
 188   3      
 189   3            delay(100);
 190   3            cmd(0x01);
 191   3            IN1 = 0;
 192   3            IN2 = 0;
 193   3            return 0;
 194   3      
 195   3          }
 196   2      
 197   2        }
 198   1      }
 199          void main() {
 200   1      
 201   1        char pass2[5];
 202   1        int i = 0;
 203   1      
 204   1        char * ptr;
 205   1        ptr = pass2;
 206   1        lcdint();
 207   1        display("Password-");
 208   1        P0 = 0xFF;
 209   1        pass2[4] = '\0';
 210   1      
 211   1        while (1) {
 212   2          while (i < 4) {
 213   3            P1 = 0xFE;
 214   3            if (P1 == 0xEE) {
 215   4              *(ptr + i) = '7';
 216   4              dat('7');
 217   4              delay(200);
 218   4              cmd(0x06);
 219   4      
 220   4              i++;
 221   4      
 222   4            } else if (P1 == 0xDE) {
 223   4              *(ptr + i) = '8';
 224   4              dat('8');
 225   4              delay(200);
 226   4              cmd(0x06);
 227   4      
 228   4              i++;
 229   4      
 230   4            } else if (P1 == 0xBE) {
 231   4              *(ptr + i) = '9';
 232   4              dat('9');
 233   4              delay(200);
 234   4              cmd(0x06);
 235   4      
 236   4              i++;
 237   4            } else if (P1 == 0x7E) {
 238   4              *(ptr + i) = '/';
 239   4              dat('/');
 240   4              delay(200);
C51 COMPILER V9.60.0.0   LOCK                                                              04/26/2022 01:23:32 PAGE 5   

 241   4              cmd(0x06);
 242   4      
 243   4              i++;
 244   4            }
 245   3      
 246   3            P1 = 0xFD;
 247   3            if (P1 == 0xED) {
 248   4              *(ptr + i) = '4';
 249   4              dat('4');
 250   4              delay(200);
 251   4              cmd(0x06);
 252   4      
 253   4              i++;
 254   4            } else if (P1 == 0xDD) {
 255   4              *(ptr + i) = '5';
 256   4              dat('5');
 257   4              delay(200);
 258   4              cmd(0x06);
 259   4      
 260   4              i++;
 261   4            } else if (P1 == 0xBD) {
 262   4              *(ptr + i) = '6';
 263   4              dat('6');
 264   4              delay(200);
 265   4              cmd(0x06);
 266   4      
 267   4              i++;
 268   4            } else if (P1 == 0x7D) {
 269   4              *(ptr + i) = '*';
 270   4              dat('*');
 271   4              delay(200);
 272   4              cmd(0x06);
 273   4      
 274   4              i++;
 275   4            }
 276   3      
 277   3            P1 = 0xFB;
 278   3            if (P1 == 0xEB) {
 279   4              *(ptr + i) = '1';
 280   4              dat('1');
 281   4              delay(200);
 282   4              cmd(0x06);
 283   4      
 284   4              i++;
 285   4            } else if (P1 == 0xDB) {
 286   4              *(ptr + i) = '2';
 287   4              dat('2');
 288   4              delay(200);
 289   4              cmd(0x06);
 290   4      
 291   4              i++;
 292   4            } else if (P1 == 0xBB) {
 293   4              *(ptr + i) = '3';
 294   4              dat('3');
 295   4              delay(200);
 296   4              cmd(0x06);
 297   4      
 298   4              i++;
 299   4            } else if (P1 == 0x7B) {
 300   4              *(ptr + i) = '-';
 301   4              dat('-');
 302   4              delay(200);
C51 COMPILER V9.60.0.0   LOCK                                                              04/26/2022 01:23:32 PAGE 6   

 303   4              cmd(0x06);
 304   4      
 305   4              i++;
 306   4            }
 307   3      
 308   3            P1 = 0xF7;
 309   3            if (P1 == 0xE7) {
 310   4              *(ptr + i) = 'C';
 311   4              dat('C');
 312   4              delay(200);
 313   4              cmd(0x06);
 314   4      
 315   4              i++;
 316   4      
 317   4            } else if (P1 == 0xD7) {
 318   4              *(ptr + i) = '0';
 319   4              dat('0');
 320   4              delay(200);
 321   4              cmd(0x06);
 322   4      
 323   4              i++;
 324   4            } else if (P1 == 0xB7) {
 325   4              *(ptr + i) = '=';
 326   4              dat('=');
 327   4              delay(200);
 328   4              cmd(0x06);
 329   4      
 330   4              i++;
 331   4            } else if (P1 == 0x77) {
 332   4              *(ptr + i) = '+';
 333   4              dat('+');
 334   4              delay(200);
 335   4              cmd(0x06);
 336   4      
 337   4              i++;
 338   4            }
 339   3          }
 340   2      
 341   2          while (i == 4) {
 342   3      
 343   3            if ((strcmp(pass, pass2)) == 0) {
 344   4      
 345   4              delay(200);
 346   4              cmd(0x01);
 347   4              display("Correct Press 1 to ");
 348   4              cmd(0xc1);
 349   4              display("reset password");
 350   4      
 351   4              cmd(0xC0);
 352   4              IN1 = 1;
 353   4              IN2 = 0;
 354   4      
 355   4              P1 = 0xFB;
 356   4              if (P1 == 0xEB) {
 357   5                delay(200);
 358   5                cmd(0x01);
 359   5                display("N-Password--");
 360   5                delay(200);
 361   5                i = 0;
 362   5                cmd(0x13);
 363   5                changepassword(0);
 364   5                display("Password-");
C51 COMPILER V9.60.0.0   LOCK                                                              04/26/2022 01:23:32 PAGE 7   

 365   5      
 366   5              }
 367   4      
 368   4            } else {
 369   4              cmd(0xC0);
 370   4              display("Incorrect");
 371   4              delay(100);
 372   4              cmd(0x01);
 373   4              display("Password-");
 374   4              i = 0;
 375   4              IN1 = 0;
 376   4              IN2 = 0;
 377   4      
 378   4              delay(100);
 379   4            }
 380   3          }
 381   2        }
 382   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1708    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
